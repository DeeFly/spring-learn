<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="info.gaofei.springMVC.controller"/>
    <context:annotation-config/>

    <context:component-scan base-package="info.gaofei.springMVC.controller"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--<mvc:default-servlet-handler />-->
    <!--<mvc:resources mapping="demo.docx" location="/"/>-->
    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters register-defaults="true">-->
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
                <!--<constructor-arg value="UTF-8"/>-->
            <!--</bean>-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list>-->
                        <!--<value>*/*</value>-->
                        <!--<value>text/html</value>-->
                        <!--<value>application/json</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <!-- 配置VelocityConfigurer，负责在spring中设置Velocity引擎。通过属性resourceLoaderPath告诉Velocity到哪里寻找它的模板。
   通常将模板放到WEB-INF下的某个子目录下，可以保证这些模板不能被直接访问。-->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/velocity/templates"/>
        <property name="configLocation" value="classpath:velocity/velocity.properties"/>
    </bean>

    <!--配置试图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="cache" value="false"/>
        <property name="prefix" value=""/>               <!-- 视图文件的前缀，即存放的路径 -->
        <property name="suffix" value=".vm"/>          <!-- 视图文件的后缀名 -->
        <property name="layoutUrl" value="layout/defaultlayout.vm" /> <!--指定layout文件,配置layoutUrl设定系统默认的模板路径-->
        <property name="layoutKey" value="layout"></property>  <!--设定模板文件键值，设定该值后就可以在vm文件中使用该键值设置模板路径，-->
        <property name="screenContentKey" value="screen_content" />     <!--screenContentKey表示指定vm文件显示位置-->
        <property name="contentType" value="text/html;charset=utf-8"/> <!--指定编码-->
        <!--也可以通过下面这种方式为velocity添加自定义函数-->
        <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml"/>
        <property name="exposeSpringMacroHelpers" value="true"/>       <!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true"/>          <!--是否开放request属性-->
        <property name="exposeSessionAttributes" value="true"/>         <!--是否开放session属性-->
        <property name="allowSessionOverride" value="true"/>
        <property name="allowRequestOverride" value="true"/>
        <!--<property name="requestContextAttribute" value="rc"/> &lt;!&ndash;      request属性引用名称&ndash;&gt;-->
    </bean>

    <!--异常处理-->
    <bean class="info.gaofei.springMVC.exceptionHandler.DefaultExceptionHandler"/>
</beans>
